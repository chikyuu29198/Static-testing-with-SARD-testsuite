code_complexity_features:
- feature: SOCKET
  feature_group: source_taint
  file_name: /tmp/tmpHEhy8l_ss_testcase/src/src/main/java/stonesoup/jtree/JTreeOptions.java
  function_name: parseOptions
  line_number: '0'
- feature: simple
  feature_group: data_type
  file_name: /tmp/tmpHEhy8l_ss_testcase/src/src/main/java/stonesoup/jtree/JTreeOptions.java
  function_name: parseOptions
  line_number: '0'
- feature: basic
  feature_group: data_flow
  file_name: /tmp/tmpHEhy8l_ss_testcase/src/src/main/java/stonesoup/jtree/JTreeOptions.java
  function_name: parseOptions
  line_number: '0'
- feature: sequence
  feature_group: control_flow
  file_name: /tmp/tmpHEhy8l_ss_testcase/src/src/main/java/stonesoup/jtree/JTreeOptions.java
  function_name: parseOptions
  line_number: '0'
description: 'This test takes an integer and filename as input (int filename), and
  checks that the file exists, and is in the current directory. However there is a  time
  of check,time of use vulnerability after the file is checked but before it is opened
  allowing the file to be deleted before opening causing a null pointer dereference.

  '
io_pair:
  benigns:
  - inputs:
    - address: ss-localhost
      id: source
      ordinal: '1'
      port: '8887'
      source: socket_input
      stage: co_process
      value: /opt/stonesoup/workspace/testData/file1 good_0.txt
      value_encoding: none
      value_type: USE_TEXT_DIRECTLY
    - name: good_0.txt
      ordinal: '2'
      source: file_content_input
      stage: pre_process
      value: FILE DATA GOES HERE YO
      value_encoding: none
      value_type: USE_TEXT_DIRECTLY
    - name: file1
      ordinal: '3'
      source: file_content_input
      stage: pre_process
      value_encoding: none
      value_type: USE_TEXT_DIRECTLY
    - id: background-complex
      name: 'inotifywait -m -e create --format "%f" /opt/stonesoup/workspace/testData/
        | while read NEW_FILE; do if [[ "${NEW_FILE}" == *.pid ]]; then REPLACE_FILE="${NEW_FILE%.pid}";
        sleep 1; echo "Deleting: " "/opt/stonesoup/workspace/testData/${REPLACE_FILE}"
        && rm -f "/opt/stonesoup/workspace/testData/${REPLACE_FILE}" && echo "Deleted.";
        else echo "Ignoring: " "/opt/stonesoup/workspace/testData/${NEW_FILE}"; fi;
        done;'
      ordinal: '4'
      source: script_input
      stage: pre_process
  - inputs:
    - address: ss-localhost
      id: source
      ordinal: '1'
      port: '8887'
      source: socket_input
      stage: co_process
      value: /opt/stonesoup/workspace/testData/file2 good_1.txt
      value_encoding: none
      value_type: USE_TEXT_DIRECTLY
    - name: good_1.txt
      ordinal: '2'
      source: file_content_input
      stage: pre_process
      value: what does this file even mean?
      value_encoding: none
      value_type: USE_TEXT_DIRECTLY
    - name: file2
      ordinal: '3'
      source: file_content_input
      stage: pre_process
      value_encoding: none
      value_type: USE_TEXT_DIRECTLY
    - id: background-complex
      name: 'inotifywait -m -e create --format "%f" /opt/stonesoup/workspace/testData/
        | while read NEW_FILE; do if [[ "${NEW_FILE}" == *.pid ]]; then REPLACE_FILE="${NEW_FILE%.pid}";
        sleep 1; echo "Deleting: " "/opt/stonesoup/workspace/testData/${REPLACE_FILE}"
        && rm -f "/opt/stonesoup/workspace/testData/${REPLACE_FILE}" && echo "Deleted.";
        else echo "Ignoring: " "/opt/stonesoup/workspace/testData/${NEW_FILE}"; fi;
        done;'
      ordinal: '4'
      source: script_input
      stage: pre_process
  - inputs:
    - address: ss-localhost
      id: source
      ordinal: '1'
      port: '8887'
      source: socket_input
      stage: co_process
      value: /opt/stonesoup/workspace/testData/file3 good_2.txt
      value_encoding: none
      value_type: USE_TEXT_DIRECTLY
    - name: file3
      ordinal: '2'
      source: file_content_input
      stage: pre_process
      value_encoding: none
      value_type: USE_TEXT_DIRECTLY
    - name: good_2.txt
      ordinal: '3'
      source: file_content_input
      stage: pre_process
      value: Brah, ...bro, like, woah...
      value_encoding: none
      value_type: USE_TEXT_DIRECTLY
    - id: background-complex
      name: 'inotifywait -m -e create --format "%f" /opt/stonesoup/workspace/testData/
        | while read NEW_FILE; do if [[ "${NEW_FILE}" == *.pid ]]; then REPLACE_FILE="${NEW_FILE%.pid}";
        sleep 1; echo "Deleting: " "/opt/stonesoup/workspace/testData/${REPLACE_FILE}"
        && rm -f "/opt/stonesoup/workspace/testData/${REPLACE_FILE}" && echo "Deleted.";
        else echo "Ignoring: " "/opt/stonesoup/workspace/testData/${NEW_FILE}"; fi;
        done;'
      ordinal: '4'
      source: script_input
      stage: pre_process
  description: 'Environment variable defining string value.

    '
  exploits:
  - inputs:
    - address: ss-localhost
      id: source
      ordinal: '1'
      port: '8887'
      source: socket_input
      stage: co_process
      value: /opt/stonesoup/workspace/testData/fifo1 bad_0.txt
      value_encoding: none
      value_type: USE_TEXT_DIRECTLY
    - name: bad_0.txt
      ordinal: '2'
      source: file_content_input
      stage: pre_process
      value: HACK THE PLANET! HACK THE PLANET!!!
      value_encoding: none
      value_type: USE_TEXT_DIRECTLY
    - id: background
      name: runFifos.py /opt/stonesoup/workspace/testData/fifo1 --nosync
      ordinal: '3'
      source: script_input
      stage: pre_process
    - id: background-complex
      name: 'inotifywait -m -e create --format "%f" /opt/stonesoup/workspace/testData/
        | while read NEW_FILE; do if [[ "${NEW_FILE}" == *.pid ]]; then REPLACE_FILE="${NEW_FILE%.pid}";
        sleep 1; echo "Deleting: " "/opt/stonesoup/workspace/testData/${REPLACE_FILE}"
        && rm -f "/opt/stonesoup/workspace/testData/${REPLACE_FILE}" && echo "Deleted.";
        else echo "Ignoring: " "/opt/stonesoup/workspace/testData/${NEW_FILE}"; fi;
        done;'
      ordinal: '4'
      source: script_input
      stage: pre_process
  - inputs:
    - address: ss-localhost
      id: source
      ordinal: '1'
      port: '8887'
      source: socket_input
      stage: co_process
      value: /opt/stonesoup/workspace/testData/fifo2 bad_1.txt
      value_encoding: none
      value_type: USE_TEXT_DIRECTLY
    - name: bad_1.txt
      ordinal: '2'
      source: file_content_input
      stage: pre_process
      value: 1337 s<r1p7 15 f0r h4x0rz
      value_encoding: none
      value_type: USE_TEXT_DIRECTLY
    - id: background
      name: runFifos.py /opt/stonesoup/workspace/testData/fifo2 --nosync
      ordinal: '3'
      source: script_input
      stage: pre_process
    - id: background-complex
      name: 'inotifywait -m -e create --format "%f" /opt/stonesoup/workspace/testData/
        | while read NEW_FILE; do if [[ "${NEW_FILE}" == *.pid ]]; then REPLACE_FILE="${NEW_FILE%.pid}";
        sleep 1; echo "Deleting: " "/opt/stonesoup/workspace/testData/${REPLACE_FILE}"
        && rm -f "/opt/stonesoup/workspace/testData/${REPLACE_FILE}" && echo "Deleted.";
        else echo "Ignoring: " "/opt/stonesoup/workspace/testData/${NEW_FILE}"; fi;
        done;'
      ordinal: '4'
      source: script_input
      stage: pre_process
weakness_points:
- entry_point_type: TRIGGER_POINT
  file_name: /tmp/tmpHEhy8l_ss_testcase/src/src/main/java/stonesoup/jtree/JTreeOptions.java
  function_name: parseOptions
  line_number: '0'
